

CREATE TABLE DEPARTMENT (
 ID INTEGER PRIMARY KEY,
 NAME VARCHAR(32),
 PARENT_ID INTEGER REFERENCES DEPARTMENT(ID)
);


INSERT INTO DEPARTMENT(ID, NAME, PARENT_ID) VALUES(1, 'DEPARTMENT_1', NULL); 
INSERT INTO DEPARTMENT(ID, NAME, PARENT_ID) VALUES(11, 'DEPARTMENT_11', 1); 
INSERT INTO DEPARTMENT(ID, NAME, PARENT_ID) VALUES(12, 'DEPARTMENT_12', 1);
INSERT INTO DEPARTMENT(ID, NAME, PARENT_ID) VALUES(111, 'DEPARTMENT_111', 11);
INSERT INTO DEPARTMENT(ID, NAME, PARENT_ID) VALUES(121, 'DEPARTMENT_121', 12); 
INSERT INTO DEPARTMENT(ID, NAME, PARENT_ID) VALUES(122, 'DEPARTMENT_122', 12);

WITH RECURSIVE T(ID, NAME, PARENT_ID, PATH, DEPTH) AS(
	SELECT
		ID,
		NAME,
		PARENT_ID,
		ARRAY [ ID ] AS PATH,
		1 AS DEPTH
	FROM
		DEPARTMENT
	WHERE
		PARENT_ID IS NULL
	UNION ALL
		SELECT
			D. ID,
			D. NAME,
			D.PARENT_ID,
			T . PATH || D. ID,
			T . DEPTH + 1 AS DEPTH
		FROM
			DEPARTMENT D
		JOIN T ON D.PARENT_ID = T . ID
) SELECT
	ID,
	NAME,
	PARENT_ID,
	PATH,
	DEPTH
FROM
	T
ORDER BY
	PATH;



-- 获取所有的父结点
WITH RECURSIVE parents( id, parent_id ) 
AS (
  -- get leaf children
  SELECT id, parent_id
  FROM DEPARTMENT
  WHERE id = 122

  UNION ALL

  -- get all parents  
  SELECT t.id, t.parent_id
  FROM parents p
  JOIN DEPARTMENT t
  ON p.parent_id = t.id
)
SELECT * from parents ;
-- SELECT * from parents where parent_id is null;



-- 获取所有的子结点
WITH RECURSIVE childs( id, parent_id ) 
AS (
  -- get parent
  SELECT id, parent_id
  FROM DEPARTMENT
  WHERE id = 1

  UNION ALL

  -- get all children
  SELECT t.id, t.parent_id
  FROM childs c
  JOIN DEPARTMENT t
  ON t.parent_id = c.id
)
SELECT * from childs;

